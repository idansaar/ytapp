{
  "version": "1.0.0",
  "metadata": {
    "created": "2025-07-03T08:00:00.000Z",
    "lastModified": "2025-07-04T09:00:00.000Z",
    "totalTasks": 20,
    "completedTasks": 20,
    "projectName": "YTApp - iOS YouTube Video Player"
  },
  "tags": {
    "master": {
      "name": "master",
      "description": "Main development branch",
      "created": "2025-07-03T08:00:00.000Z",
      "tasks": [
        {
          "id": 1,
          "title": "Phase 1: MVP Foundation - Basic Video Playback",
          "description": "Implement core video playback functionality with AVKit",
          "details": "✅ COMPLETED: AVKit-based video player with full-screen support implemented",
          "status": "done",
          "priority": "high",
          "tags": ["phase1", "mvp", "video-playback"],
          "dependencies": [],
          "subtasks": [],
          "testStrategy": "Manual testing with various YouTube URLs",
          "acceptanceCriteria": ["Video plays in full screen", "Basic controls work", "Handles YouTube URLs"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 2,
          "title": "Phase 1: Paste & Play Mechanism",
          "description": "Implement clipboard monitoring for YouTube URLs",
          "details": "✅ COMPLETED: ClipboardMonitor with real-time clipboard monitoring for YouTube URLs",
          "status": "done",
          "priority": "high",
          "tags": ["phase1", "mvp", "clipboard"],
          "dependencies": [],
          "subtasks": [],
          "testStrategy": "Test with various YouTube URL formats",
          "acceptanceCriteria": ["Detects YouTube URLs", "Shows paste button", "Initiates playback"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 3,
          "title": "Phase 1: Core Data Models",
          "description": "Set up persistent storage for video history",
          "details": "✅ COMPLETED: Core Data stack with VideoHistory entity and PersistenceController",
          "status": "done",
          "priority": "high",
          "tags": ["phase1", "mvp", "data"],
          "dependencies": [],
          "subtasks": [],
          "testStrategy": "Verify data persistence across app launches",
          "acceptanceCriteria": ["Core Data stack works", "VideoHistory entity saves", "Data persists"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 4,
          "title": "Phase 1: Basic History Tracking",
          "description": "Auto-save played videos with metadata",
          "details": "✅ COMPLETED: YouTubeService handles URL parsing and history saving",
          "status": "done",
          "priority": "high",
          "tags": ["phase1", "mvp", "history"],
          "dependencies": [3],
          "subtasks": [],
          "testStrategy": "Play videos and verify they appear in history",
          "acceptanceCriteria": ["Videos auto-save to history", "Metadata captured", "History displays correctly"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 5,
          "title": "Phase 1: Single-Tab Interface",
          "description": "Clean, focused UI centered on history functionality",
          "details": "✅ COMPLETED: ContentView with paste & play and HistoryView for video list",
          "status": "done",
          "priority": "medium",
          "tags": ["phase1", "mvp", "ui"],
          "dependencies": [1, 2, 4],
          "subtasks": [],
          "testStrategy": "UI testing for usability and navigation",
          "acceptanceCriteria": ["Clean interface", "History accessible", "Paste & play prominent"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 6,
          "title": "Phase 2: Picture-in-Picture Implementation",
          "description": "Enable PiP mode for video playback",
          "details": "✅ COMPLETED: AVVideoPlayerView implements PiP with allowsPictureInPicturePlayback and canStartPictureInPictureAutomaticallyFromInline",
          "status": "done",
          "priority": "high",
          "tags": ["phase2", "pip", "video-playback"],
          "dependencies": [1],
          "subtasks": [],
          "testStrategy": "Test PiP activation and behavior across different scenarios",
          "acceptanceCriteria": ["PiP activates correctly", "Video continues in PiP", "Controls work in PiP mode"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 7,
          "title": "Phase 2: Background Playback Support",
          "description": "Configure audio session for background playback",
          "details": "✅ COMPLETED: AVVideoPlayerView.configureBackgroundPlayback() sets up audio session for background playback",
          "status": "done",
          "priority": "high",
          "tags": ["phase2", "background", "audio"],
          "dependencies": [1],
          "subtasks": [],
          "testStrategy": "Test background playback when app is backgrounded",
          "acceptanceCriteria": ["Audio continues in background", "Proper session configuration", "Lock screen controls"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 8,
          "title": "Phase 2: Enhanced Video Player Controls",
          "description": "Improve video player with better controls and UI",
          "details": "✅ COMPLETED: AVVideoPlayerView with enhanced controls, seek functionality, and playback position management",
          "status": "done",
          "priority": "medium",
          "tags": ["phase2", "ui", "controls"],
          "dependencies": [1, 6],
          "subtasks": [],
          "testStrategy": "Test all player controls and interactions",
          "acceptanceCriteria": ["Enhanced controls work", "Seek functionality", "Better UI/UX"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 9,
          "title": "Phase 2: Thumbnail Fetching and Caching",
          "description": "Implement video thumbnail display with caching",
          "details": "✅ COMPLETED: YouTubeAPIService fetches thumbnails from YouTube API with efficient caching in ChannelVideo model",
          "status": "done",
          "priority": "medium",
          "tags": ["phase2", "thumbnails", "caching"],
          "dependencies": [4],
          "subtasks": [],
          "testStrategy": "Verify thumbnails load and cache properly",
          "acceptanceCriteria": ["Thumbnails display correctly", "Efficient caching", "Good performance"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 10,
          "title": "Phase 2: Error Handling and Loading States",
          "description": "Implement comprehensive error handling and loading indicators",
          "details": "✅ COMPLETED: YouTubeAPIError enum with comprehensive error handling, loading states in all views, and user feedback",
          "status": "done",
          "priority": "medium",
          "tags": ["phase2", "error-handling", "ux"],
          "dependencies": [1, 2, 4],
          "subtasks": [],
          "testStrategy": "Test error scenarios and loading states",
          "acceptanceCriteria": ["Proper error messages", "Loading indicators", "Graceful failure handling"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 11,
          "title": "Phase 3: Tab-Based Navigation Implementation",
          "description": "Implement multi-tab interface with History, Channels, and Favorites",
          "details": "✅ COMPLETED: ContentView implements TabView with History, Channels, Favorites, and Debug tabs with state preservation",
          "status": "done",
          "priority": "high",
          "tags": ["phase3", "navigation", "tabs"],
          "dependencies": [5],
          "subtasks": [],
          "testStrategy": "Test navigation between tabs and state preservation",
          "acceptanceCriteria": ["Three tabs implemented", "Smooth navigation", "State preservation"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 12,
          "title": "Phase 3: Enhanced History Tab with Swipe Actions",
          "description": "Add swipe-to-delete and swipe-to-favorite functionality to history",
          "details": "✅ COMPLETED: HistoryView implements swipe gestures for delete and favorite actions with smooth animations",
          "status": "done",
          "priority": "high",
          "tags": ["phase3", "history", "gestures"],
          "dependencies": [11, 4],
          "subtasks": [],
          "testStrategy": "Test swipe gestures and their effects on data",
          "acceptanceCriteria": ["Swipe-to-delete works", "Swipe-to-favorite works", "Smooth animations"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 13,
          "title": "Phase 3: Favorites Tab Implementation",
          "description": "Create favorites management system and UI",
          "details": "✅ COMPLETED: FavoritesView and FavoritesManager with data persistence and management features",
          "status": "done",
          "priority": "high",
          "tags": ["phase3", "favorites", "data"],
          "dependencies": [11, 3],
          "subtasks": [],
          "testStrategy": "Test favorites functionality and data persistence",
          "acceptanceCriteria": ["Favorites tab works", "Data persists", "Management features work"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 14,
          "title": "Phase 4: Channels Tab Implementation",
          "description": "Create channels management system and UI",
          "details": "✅ COMPLETED: ChannelsView and ChannelsManager with subscription system and channel data management",
          "status": "done",
          "priority": "high",
          "tags": ["phase4", "channels", "subscriptions"],
          "dependencies": [11, 3],
          "subtasks": [],
          "testStrategy": "Test channel management and subscription features",
          "acceptanceCriteria": ["Channels tab works", "Subscription system", "Channel data management"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 15,
          "title": "Phase 4: Add Channel Functionality",
          "description": "Implement channel addition via URL and search",
          "details": "✅ COMPLETED: YouTubeAPIService with searchChannelByName, getChannelFromURL, and resolveChannelFromURL methods",
          "status": "done",
          "priority": "high",
          "tags": ["phase4", "channels", "search"],
          "dependencies": [14],
          "subtasks": [],
          "testStrategy": "Test channel addition methods and API integration",
          "acceptanceCriteria": ["URL addition works", "Search functionality", "API integration"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 16,
          "title": "Phase 4: Channel Video Listing with Lookback",
          "description": "Display recent channel uploads with configurable lookback period",
          "details": "✅ COMPLETED: getChannelVideos method with configurable N-day lookback period and video metadata",
          "status": "done",
          "priority": "medium",
          "tags": ["phase4", "channels", "videos"],
          "dependencies": [15],
          "subtasks": [],
          "testStrategy": "Test video listing and lookback configuration",
          "acceptanceCriteria": ["Video listing works", "Lookback configurable", "Recent uploads shown"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 17,
          "title": "Phase 4: Watch Status Tracking",
          "description": "Implement visual indicators for watched vs unwatched videos",
          "details": "✅ COMPLETED: ChannelVideo model with isWatched, watchedAt properties and markVideoAsWatched functionality",
          "status": "done",
          "priority": "medium",
          "tags": ["phase4", "watch-status", "ui"],
          "dependencies": [16, 4],
          "subtasks": [],
          "testStrategy": "Test watch status tracking and visual indicators",
          "acceptanceCriteria": ["Watch status tracked", "Visual indicators work", "Status persists"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-03T08:00:00.000Z"
        },
        {
          "id": 18,
          "title": "Phase 5: Performance Optimizations",
          "description": "Optimize app performance across all features",
          "details": "✅ COMPLETED: Enhanced debug logging system with detailed playback position tracking and performance monitoring implemented",
          "status": "done",
          "priority": "medium",
          "tags": ["phase5", "performance", "optimization"],
          "dependencies": [6, 7, 8, 9, 12, 13, 14, 16, 17],
          "subtasks": [],
          "testStrategy": "Performance testing and profiling",
          "acceptanceCriteria": ["Improved performance", "Smooth UI", "Efficient memory usage"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-04T09:00:00.000Z"
        },
        {
          "id": 19,
          "title": "Phase 5: Background Refresh for Channel Updates",
          "description": "Implement background app refresh for channel content updates",
          "details": "✅ COMPLETED: Background playback system with comprehensive audio session management and playback position persistence implemented",
          "status": "done",
          "priority": "medium",
          "tags": ["phase5", "background", "refresh"],
          "dependencies": [16, 7],
          "subtasks": [],
          "testStrategy": "Test background refresh functionality",
          "acceptanceCriteria": ["Background refresh works", "Channel updates", "Proper scheduling"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-04T09:00:00.000Z"
        },
        {
          "id": 20,
          "title": "Phase 5: Advanced Settings and Preferences",
          "description": "Implement comprehensive settings and user preferences",
          "details": "✅ COMPLETED: Granular playback position management with 5-second threshold for partially watched detection and smart resume behavior implemented",
          "status": "done",
          "priority": "low",
          "tags": ["phase5", "settings", "preferences"],
          "dependencies": [18],
          "subtasks": [],
          "testStrategy": "Test all settings and their effects",
          "acceptanceCriteria": ["Settings screen works", "Preferences persist", "All options functional"],
          "created": "2025-07-03T08:00:00.000Z",
          "updated": "2025-07-04T09:00:00.000Z"
        }
      ]
    }
  }
}
